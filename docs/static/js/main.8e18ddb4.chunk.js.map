{"version":3,"sources":["services/spreadsheet/outTable.jsx","services/spreadsheet/dragDropFile.jsx","services/spreadsheet/dataInput.jsx","services/spreadsheet/spreadsheet.jsx","services/plot/plotConfig.jsx","services/plot/plot.jsx","App.jsx","index.js"],"names":["OutTable","_this","this","react_default","a","createElement","className","props","cols","map","c","key","name","data","r","i","React","Component","DragDropFile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDrop","bind","assertThisInitialized","evt","stopPropagation","preventDefault","files","dataTransfer","handleFile","onDragEnter","suppress","onDragOver","children","DataInput","handleChange","e","target","type","id","accept","SheetJSFT","onChange","x","join","Spreadsheet","state","file","_this2","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","cellDates","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","raw","setState","get_cols","onLoadFile","readAsArrayBuffer","dragDropFile","dataInput","outTable","o","C","decode_range","_loop","encode_col","head","w","t","keys","filter","cellName","match","plotConfig","plotName","cfg","default","bubbleOrScatter","datasets","zipWith","apply","toConsumableArray","obj","slice","concat","l","y","label","Bubble","Scatter","labels","find","numbers","renderPlot","length","Plot","plot","getConfig","App","handleLoadFile","Fragment","spreadsheet","ReactDOM","render","src_App_0","document","getElementById","serviceWorker"],"mappings":"kNAmCeA,mLA1BF,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACKH,KAAKK,MAAMC,KAAKC,IAAI,SAAAC,GAAC,OAClBP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,EAAEC,KAAMD,EAAEE,UAI/BT,EAAAC,EAAAC,cAAA,aACKH,KAAKK,MAAMM,KAAKJ,IAAI,SAACK,EAAGC,GAAJ,OACjBZ,EAAAC,EAAAC,cAAA,MAAIM,IAAKI,GACJd,EAAKM,MAAMC,KAAKC,IAAI,SAAAC,GAAC,OAClBP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,EAAEC,KAAMG,EAAEJ,EAAEC,qBAhBlCK,IAAMC,WC2BdC,cA3BX,SAAAA,EAAYX,GAAO,IAAAN,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAjB,KAAAgB,IACfjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAArB,KAAMK,KACDiB,OAASvB,EAAKuB,OAAOC,KAAZN,OAAAO,EAAA,EAAAP,CAAAlB,IAFCA,wEAIV0B,GACLA,EAAIC,kBACJD,EAAIE,gDAEDF,GACHA,EAAIC,kBACJD,EAAIE,iBACJ,IAAMC,EAAQH,EAAII,aAAaD,MAC3BA,GAASA,EAAM,IAAI5B,KAAKK,MAAMyB,WAAWF,EAAM,qCAGnD,OACI3B,EAAAC,EAAAC,cAAA,OACImB,OAAQtB,KAAKsB,OACbS,YAAa/B,KAAKgC,SAClBC,WAAYjC,KAAKgC,UAEhBhC,KAAKK,MAAM6B,iBAtBDpB,IAAMC,WCA3BoB,cACF,SAAAA,EAAY9B,GAAO,IAAAN,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAjB,KAAAmC,IACfpC,EAAAkB,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAkB,GAAAd,KAAArB,KAAMK,KACD+B,aAAerC,EAAKqC,aAAab,KAAlBN,OAAAO,EAAA,EAAAP,CAAAlB,IAFLA,4EAINsC,GACT,IAAMT,EAAQS,EAAEC,OAAOV,MACnBA,GAASA,EAAM,IAAI5B,KAAKK,MAAMyB,WAAWF,EAAM,qCAGnD,OACI3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLnC,UAAU,eACVoC,GAAG,OACHC,OAAQC,EACRC,SAAU3C,KAAKoC,wBAlBftB,IAAMC,WA0BxB2B,EAAY,CACd,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OAECnC,IAAI,SAASqC,GACV,MAAO,IAAMA,IAEhBC,KAAK,KAEKV,ICWAW,cAxDX,SAAAA,EAAYzC,GAAO,IAAAN,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAjB,KAAA8C,IACf/C,EAAAkB,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAArB,KAAMK,KACD0C,MAAQ,CACTpC,KAAM,GACNL,KAAM,IAEVP,EAAK+B,WAAa/B,EAAK+B,WAAWP,KAAhBN,OAAAO,EAAA,EAAAP,CAAAlB,IANHA,0EAQRiD,GAAgB,IAAAC,EAAAjD,KAEjBkD,EAAS,IAAIC,WACbC,IAASF,EAAOG,mBACtBH,EAAOI,OAAS,SAAAjB,GAEZ,IAAMkB,EAAOlB,EAAEC,OAAOkB,OAChBC,EAAKC,IAAKC,KAAKJ,EAAM,CACvBhB,KAAMa,EAAO,SAAW,QACxBQ,WAAW,IAGTC,EAASJ,EAAGK,WAAW,GACvBC,EAAKN,EAAGO,OAAOH,GAEflD,EAAO+C,IAAKO,MAAMC,cAAcH,EAAI,CACtCI,OAAQ,EACRC,KAAK,IAGTnB,EAAKoB,SAAS,CAAE1D,KAAMA,EAAML,KAAMgE,EAASP,KAC3Cd,EAAK5C,MAAMkE,WAAWtB,EAAKF,QAE3BK,EAAMF,EAAOG,mBAAmBL,GAC/BE,EAAOsB,kBAAkBxB,oCAG9B,OACI/C,EAAAC,EAAAC,cAACsE,EAAD,CAAc3C,WAAY9B,KAAK8B,YAC3B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACuE,EAAD,CAAW5C,WAAY9B,KAAK8B,eAGpC7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACwE,EAAD,CACIhE,KAAMX,KAAK+C,MAAMpC,KACjBL,KAAMN,KAAK+C,MAAMzC,iBA/CnBQ,IAAMC,WA4D1BuD,EAAW,SAAAP,GAGb,IAFA,IAAIa,EAAI,GACJC,EAAInB,IAAKO,MAAMa,aAAaf,EAAG,SAAS1B,EAAE7B,EAAI,EAF/BuE,EAAA,WAIf,IAAMrE,EAAOgD,IAAKO,MAAMe,WAAWnE,GACnC+D,EAAE/D,GAAK,CACHH,KAAMA,EACNuE,KAAMlB,EAAGrD,EAAO,KAAKwE,EACrBzE,IAAKI,EACL0B,KAAMwB,EAAGrD,EAAO,KAAKyE,EACrBxE,KAAMM,OAAOmE,KAAKrB,GACbsB,OAAO,SAAAC,GAAQ,OAAIA,EAASC,MAAM7E,KAClCH,IAAI,SAAA+E,GAAQ,OAAIvB,EAAGuB,GAAUJ,MATjCrE,EAAI,EAAGA,EAAIgE,IAAKhE,EAAGkE,IAY5B,OAAOH,0BCvFEY,EAAa,SAAAC,GACtB,OAAOC,EAAID,IAAaC,EAAIC,SAe1BC,EAAkB,WACpB,MAAO,CACHC,SAAUC,UAAOC,WAAP,EAAA9E,OAAA+E,EAAA,EAAA/E,CACHjB,KAAKO,IAAI,SAAA0F,GAAG,OAAIA,EAAItF,KAAKuF,MAAM,MAD5BC,OAAA,CAEN,SAACC,EAAGxD,EAAGyD,EAAGzF,GAAV,MAAiB,CAAE0F,MAAOF,EAAGzF,KAAM,CAAC,CAAEiC,EAAGA,EAAGyD,EAAGA,EAAGzF,EAAGA,WAK3D8E,EAAM,CACRa,OAAQX,EACRY,QAASZ,EACTD,QAxBkB,WAClB,IAAMc,EAASzG,KAAK0G,KAAK,SAAAT,GAAG,MAAiB,MAAbA,EAAI1D,OAC9BoE,EAAU3G,KAAKqF,OAAO,SAAAY,GAAG,MAAiB,MAAbA,EAAI1D,OACvC,MAAO,CACHkE,OAAQA,EAAO9F,KAAKuF,MAAM,GAC1BL,SAAUc,EAAQpG,IAAI,SAAA0F,GAAG,MAAK,CAC1BK,MAAOL,EAAItF,KAAK,GAChBA,KAAMsF,EAAItF,KAAKuF,MAAM,SCT1B,SAASU,EAAWtG,GACvB,GAAIA,EAAKuG,OAAS,EACd,MAkBG,CACHC,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,KA3BkBvG,IAAI,SAACwG,EAAMlG,GACzB,OAAOC,IAAMX,cACT,MACA,CAAEC,UAAW,SAAUK,IAAKI,GAC5BC,IAAMX,cAAc4G,EAAM,CACtBtG,IAAKI,EACLF,KAAMqG,EAAU1G,EAAMyG,EAAKrG,WAO/C,SAASsG,EAAU1G,EAAMmF,GACrB,OAAOD,EAAWC,GAAUlE,KAAKjB,EAA1BkF,OCOIyB,6MArBXlE,MAAQ,CACJpC,KAAM,GACNL,KAAM,MAEV4G,eAAiB,SAAAnE,GACbhD,EAAKsE,SAAStB,4EAId,OACI9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMiH,SAAP,KACIlH,EAAAC,EAAAC,cAACiH,EAAD,CACIzG,KAAMX,KAAK+C,MAAMpC,KACjB4D,WAAYvE,KAAKkH,iBAErBjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOwG,EAAW5G,KAAK+C,MAAMzC,eAhB1CQ,IAAMC,4BCExBsG,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SAKjDC","file":"static/js/main.8e18ddb4.chunk.js","sourcesContent":["/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\nimport React from \"react\";\n\nclass OutTable extends React.Component {\n    render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            {this.props.cols.map(c => (\n                                <th key={c.key}>{c.name}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((r, i) => (\n                            <tr key={i}>\n                                {this.props.cols.map(c => (\n                                    <td key={c.key}>{r[c.key]}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default OutTable;\n","/*\n  Simple HTML5 file drag-and-drop wrapper\n  usage: <DragDropFile handleFile={handleFile}>...</DragDropFile>\n    handleFile(file:File):void;\n*/\nimport React from \"react\";\n\nclass DragDropFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onDrop = this.onDrop.bind(this);\n    }\n    suppress(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    }\n    onDrop(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        const files = evt.dataTransfer.files;\n        if (files && files[0]) this.props.handleFile(files[0]);\n    }\n    render() {\n        return (\n            <div\n                onDrop={this.onDrop}\n                onDragEnter={this.suppress}\n                onDragOver={this.suppress}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragDropFile;\n","/*\n  Simple HTML5 file input wrapper\n  usage: <DataInput handleFile={callback} />\n    handleFile(file:File):void;\n*/\nimport React from \"react\";\n\nclass DataInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        const files = e.target.files;\n        if (files && files[0]) this.props.handleFile(files[0]);\n    }\n    render() {\n        return (\n            <form className=\"form-inline\">\n                <div className=\"form-group\">\n                    <input\n                        type=\"file\"\n                        className=\"form-control\"\n                        id=\"file\"\n                        accept={SheetJSFT}\n                        onChange={this.handleChange}\n                    />\n                </div>\n            </form>\n        );\n    }\n}\n/* list of supported file types */\nconst SheetJSFT = [\n    \"xlsx\",\n    \"xlsb\",\n    \"xlsm\",\n    \"xls\",\n    \"xml\",\n    \"csv\",\n    \"txt\",\n    \"ods\",\n    \"fods\",\n    \"uos\",\n    \"sylk\",\n    \"dif\",\n    \"dbf\",\n    \"prn\",\n    \"qpw\",\n    \"123\",\n    \"wb*\",\n    \"wq*\",\n    \"html\",\n    \"htm\"\n]\n    .map(function(x) {\n        return \".\" + x;\n    })\n    .join(\",\");\n\nexport default DataInput;\n","/* xlsx.js (C) 2013-present  SheetJS -- http://sheetjs.com */\n/* Notes:\n   - usage: `ReactDOM.render( <SheetJSApp />, document.getElementById('app') );`\n   - xlsx.full.min.js is loaded in the head of the HTML page\n   - this script should be referenced with type=\"text/babel\"\n   - babel.js in-browser transpiler should be loaded before this script\n*/\n\nimport React from \"react\";\nimport XLSX from \"xlsx\";\nimport OutTable from \"./outTable\";\nimport DragDropFile from \"./dragDropFile\";\nimport DataInput from \"./dataInput\";\n\nclass Spreadsheet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [] /* Array of Arrays e.g. [[\"a\",\"b\"],[1,2]] */,\n            cols: [] /* Array of column objects e.g. { name: \"C\", K: 2 } */\n        };\n        this.handleFile = this.handleFile.bind(this);\n    }\n    handleFile(file /*:File*/) {\n        /* Boilerplate to set up FileReader */\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n        reader.onload = e => {\n            /* Parse data */\n            const bstr = e.target.result;\n            const wb = XLSX.read(bstr, {\n                type: rABS ? \"binary\" : \"array\",\n                cellDates: true\n            });\n            /* Get first worksheet */\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            /* Convert array of arrays */\n            const data = XLSX.utils.sheet_to_json(ws, {\n                header: 1,\n                raw: false\n            });\n            /* Update state */\n            this.setState({ data: data, cols: get_cols(ws) });\n            this.props.onLoadFile(this.state);\n        };\n        if (rABS) reader.readAsBinaryString(file);\n        else reader.readAsArrayBuffer(file);\n    }\n    render() {\n        return (\n            <DragDropFile handleFile={this.handleFile}>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <DataInput handleFile={this.handleFile} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <OutTable\n                            data={this.state.data}\n                            cols={this.state.cols}\n                        />\n                    </div>\n                </div>\n            </DragDropFile>\n        );\n    }\n}\n\n// if (typeof module !== \"undefined\") module.exports = SheetJSApp;\nexport default Spreadsheet;\n\n/* generate an array of all spreadsheet data */\nconst get_cols = ws => {\n    let o = [],\n        C = XLSX.utils.decode_range(ws[\"!ref\"]).e.c + 1;\n    for (var i = 0; i < C; ++i) {\n        const name = XLSX.utils.encode_col(i);\n        o[i] = {\n            name: name,\n            head: ws[name + \"1\"].w,\n            key: i,\n            type: ws[name + \"2\"].t,\n            data: Object.keys(ws)\n                .filter(cellName => cellName.match(name))\n                .map(cellName => ws[cellName].w)\n        };\n    }\n    return o;\n};\n","import { zipWith } from \"lodash\";\n\nexport const plotConfig = plotName => {\n    return cfg[plotName] || cfg.default;\n};\n\nconst getDefaultCfg = function() {\n    const labels = this.find(obj => obj.type === \"s\");\n    const numbers = this.filter(obj => obj.type === \"n\");\n    return {\n        labels: labels.data.slice(1),\n        datasets: numbers.map(obj => ({\n            label: obj.data[0],\n            data: obj.data.slice(1)\n        }))\n    };\n};\n\nconst bubbleOrScatter = function() {\n    return {\n        datasets: zipWith(\n            ...this.map(obj => obj.data.slice(1)),\n            (l, x, y, r) => ({ label: l, data: [{ x: x, y: y, r: r }] })\n        )\n    };\n};\n\nconst cfg = {\n    Bubble: bubbleOrScatter,\n    Scatter: bubbleOrScatter,\n    default: getDefaultCfg\n};\n","import React from \"react\";\nimport * as Plot from \"react-chartjs-2\";\nimport { plotConfig } from \"./plotConfig\";\n\nexport function renderPlot(cols) {\n    if (cols.length > 0) {\n        return getPlots().map((plot, i) => {\n            return React.createElement(\n                \"div\",\n                { className: \"col-md\", key: i },\n                React.createElement(plot, {\n                    key: i,\n                    data: getConfig(cols, plot.name)\n                })\n            );\n        });\n    }\n}\n\nfunction getConfig(cols, plotName) {\n    return plotConfig(plotName).bind(cols)();\n}\n\nfunction getPlots() {\n    return [\n        Plot.Doughnut,\n        Plot.Pie,\n        Plot.Radar,\n        Plot.Bar,\n        Plot.HorizontalBar,\n        Plot.Line,\n        Plot.Polar,\n        Plot.Bubble,\n        Plot.Scatter\n    ];\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport SheetJSApp from \"./services/spreadsheet\";\nimport { renderPlot } from \"./services/plot\";\n\nclass App extends React.Component {\n    state = {\n        data: [],\n        cols: []\n    };\n    handleLoadFile = state => {\n        this.setState(state);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <SheetJSApp\n                    data={this.state.data}\n                    onLoadFile={this.handleLoadFile}\n                />\n                <div className=\"row\">{renderPlot(this.state.cols)}</div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from 'react-scripts/template/src/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}